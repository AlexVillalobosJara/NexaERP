@page "/setup"
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations

<PageTitle>Configuración Inicial - ERP Manufactura</PageTitle>

<!-- Debug Info -->
<div style="background: #f8f9fa; padding: 1rem; margin-bottom: 1rem; border-radius: 0.5rem;">
    <h5>🔍 Debug Info</h5>
    <p><strong>Paso Actual:</strong> @currentStep (@stepTitles[currentStep])</p>
    <p><strong>Modelo RUT:</strong> "@setupModel.RutEmpresa"</p>
    <p><strong>Modelo Email:</strong> "@setupModel.Email"</p>
    <button class="btn btn-sm btn-info" @onclick="DebugTest">🧪 Test Click</button>
</div>

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-8">

            <!-- Header -->
            <div class="card mb-3">
                <div class="card-body text-center">
                    <h1 class="text-primary mb-3">⚙️ Configuración Inicial del Sistema</h1>
                    <p class="text-muted">Configure los datos básicos de su empresa</p>
                </div>
            </div>

            <!-- Simple Steps Indicator -->
            <div class="card mb-3">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        @for (int i = 0; i < stepTitles.Length; i++)
                        {
                            var stepIndex = i;
                            var isActive = currentStep == stepIndex;
                            var isCompleted = stepIndex < currentStep;

                            <button class="btn @(isActive ? "btn-primary" : isCompleted ? "btn-success" : "btn-outline-secondary") btn-sm"
                                    @onclick="() => GoToStep(stepIndex)">
                                @if (isCompleted)
                                {
                                    <span>✓ @(stepIndex + 1)</span>
                                }
                                else
                                {
                                    <span>@(stepIndex + 1)</span>
                                }
                                <br>
                                <small>@stepTitles[stepIndex]</small>
                            </button>
                        }
                    </div>
                </div>
            </div>

            <!-- Form Content -->
            <div class="card">
                <div class="card-body">
                    <EditForm Model="setupModel" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="alert alert-danger" />

                        @if (currentStep == 0)
                        {
                            <!-- Step 1: Company Data -->
                            <h4 class="mb-4">🏢 Información de la Empresa</h4>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">RUT Empresa *</label>
                                    <input type="text" class="form-control" @bind="setupModel.RutEmpresa"
                                           placeholder="99.999.999-9" />
                                    <ValidationMessage For="() => setupModel.RutEmpresa" class="text-danger" />
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Razón Social *</label>
                                    <input type="text" class="form-control" @bind="setupModel.RazonSocial"
                                           placeholder="Nombre legal de la empresa" />
                                    <ValidationMessage For="() => setupModel.RazonSocial" class="text-danger" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Nombre Comercial</label>
                                    <input type="text" class="form-control" @bind="setupModel.NombreComercial"
                                           placeholder="Nombre comercial (opcional)" />
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Giro</label>
                                    <input type="text" class="form-control" @bind="setupModel.Giro"
                                           placeholder="Actividad principal" />
                                </div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Dirección Casa Matriz</label>
                                <input type="text" class="form-control" @bind="setupModel.DireccionCasaMatriz"
                                       placeholder="Dirección completa" />
                            </div>

                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <label class="form-label">Región</label>
                                    <select class="form-select" @bind="setupModel.RegionCasaMatriz">
                                        <option value="">Seleccione región</option>
                                        @foreach (var region in regiones)
                                        {
                                            <option value="@region">@region</option>
                                        }
                                    </select>
                                </div>

                                <div class="col-md-4 mb-3">
                                    <label class="form-label">Ciudad</label>
                                    <input type="text" class="form-control" @bind="setupModel.CiudadCasaMatriz"
                                           placeholder="Ciudad" />
                                </div>

                                <div class="col-md-4 mb-3">
                                    <label class="form-label">Comuna</label>
                                    <select class="form-select" @bind="setupModel.ComunaCasaMatriz">
                                        <option value="">Seleccione comuna</option>
                                        @foreach (var comuna in comunas)
                                        {
                                            <option value="@comuna">@comuna</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        }
                        else if (currentStep == 1)
                        {
                            <!-- Step 2: Contact & SII -->
                            <h4 class="mb-4">📞 Información de Contacto y SII</h4>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Teléfono</label>
                                    <input type="text" class="form-control" @bind="setupModel.Telefono"
                                           placeholder="+56 2 2XXX XXXX" />
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Email *</label>
                                    <input type="email" class="form-control" @bind="setupModel.Email"
                                           placeholder="contacto@empresa.cl" />
                                    <ValidationMessage For="() => setupModel.Email" class="text-danger" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Sitio Web</label>
                                    <input type="url" class="form-control" @bind="setupModel.SitioWeb"
                                           placeholder="https://www.empresa.cl" />
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Código SII</label>
                                    <input type="text" class="form-control" @bind="setupModel.CodigoSII"
                                           placeholder="Código SII (opcional)" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Resolución SII</label>
                                    <input type="text" class="form-control" @bind="setupModel.ResolucionSII"
                                           placeholder="N° Resolución" />
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Fecha Resolución</label>
                                    <input type="date" class="form-control" @bind="setupModel.FechaResolucionSII" />
                                </div>
                            </div>
                        }
                        else if (currentStep == 2)
                        {
                            <!-- Step 3: Configuration -->
                            <h4 class="mb-4">⚙️ Configuración del Sistema</h4>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Moneda Principal</label>
                                    <select class="form-select" @bind="setupModel.MonedaPrincipalId">
                                        @foreach (var moneda in tiposMoneda)
                                        {
                                            <option value="@moneda.Id">@moneda.Nombre</option>
                                        }
                                    </select>
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Método de Valorización</label>
                                    <select class="form-select" @bind="setupModel.MetodoValorizacionId">
                                        @foreach (var metodo in metodosValorizacion)
                                        {
                                            <option value="@metodo.Id">@metodo.Nombre</option>
                                        }
                                    </select>
                                </div>
                            </div>

                            <h5 class="mt-4 mb-3">📦 Opciones de Inventario</h5>

                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" @bind="setupModel.PermiteInventarioNegativo" id="inventarioNegativo">
                                    <label class="form-check-label" for="inventarioNegativo">
                                        Permitir inventario negativo
                                    </label>
                                </div>
                            </div>

                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" @bind="setupModel.ManejaLotes" id="manejaLotes">
                                    <label class="form-check-label" for="manejaLotes">
                                        Manejar lotes
                                    </label>
                                </div>
                            </div>

                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" @bind="setupModel.ManejaSeries" id="manejaSeries">
                                    <label class="form-check-label" for="manejaSeries">
                                        Manejar series
                                    </label>
                                </div>
                            </div>

                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" @bind="setupModel.ManejaUbicaciones" id="manejaUbicaciones">
                                    <label class="form-check-label" for="manejaUbicaciones">
                                        Manejar ubicaciones en bodega
                                    </label>
                                </div>
                            </div>
                        }
                        else if (currentStep == 3)
                        {
                            <!-- Step 4: Admin User -->
                            <h4 class="mb-4">👤 Usuario Administrador</h4>

                            <div class="alert alert-info" role="alert">
                                ℹ️ Este será el usuario administrador principal del sistema con acceso completo.
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Nombre de Usuario *</label>
                                    <input type="text" class="form-control" @bind="setupModel.AdminUsuario"
                                           placeholder="admin" />
                                    <ValidationMessage For="() => setupModel.AdminUsuario" class="text-danger" />
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Email *</label>
                                    <input type="email" class="form-control" @bind="setupModel.AdminEmail"
                                           placeholder="admin@empresa.cl" />
                                    <ValidationMessage For="() => setupModel.AdminEmail" class="text-danger" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Nombres *</label>
                                    <input type="text" class="form-control" @bind="setupModel.AdminNombres"
                                           placeholder="Nombres" />
                                    <ValidationMessage For="() => setupModel.AdminNombres" class="text-danger" />
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Apellidos *</label>
                                    <input type="text" class="form-control" @bind="setupModel.AdminApellidos"
                                           placeholder="Apellidos" />
                                    <ValidationMessage For="() => setupModel.AdminApellidos" class="text-danger" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Contraseña *</label>
                                    <input type="password" class="form-control" @bind="setupModel.AdminPassword"
                                           placeholder="Contraseña segura" />
                                    <ValidationMessage For="() => setupModel.AdminPassword" class="text-danger" />
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Confirmar Contraseña *</label>
                                    <input type="password" class="form-control" @bind="setupModel.AdminPasswordConfirm"
                                           placeholder="Confirme la contraseña" />
                                    <ValidationMessage For="() => setupModel.AdminPasswordConfirm" class="text-danger" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">RUT Personal</label>
                                    <input type="text" class="form-control" @bind="setupModel.AdminRut"
                                           placeholder="12.345.678-9 (opcional)" />
                                </div>
                            </div>
                        }

                        <!-- Navigation Buttons -->
                        <div class="d-flex justify-content-between pt-4 mt-4 border-top">
                            <div>
                                @if (currentStep > 0)
                                {
                                    <button type="button" class="btn btn-outline-secondary" @onclick="PreviousStep">
                                        ← Anterior
                                    </button>
                                }
                            </div>

                            <div>
                                <button type="button" class="btn btn-warning me-2" @onclick="ResetForm">
                                    🔄 Limpiar
                                </button>

                                @if (currentStep < stepTitles.Length - 1)
                                {
                                    <button type="button" class="btn btn-primary" @onclick="NextStep">
                                        Siguiente →
                                    </button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-success" disabled="@isLoading">
                                        @if (isLoading)
                                        {
                                            <span>⏳ Guardando...</span>
                                        }
                                        else
                                        {
                                            <span>✅ Completar Configuración</span>
                                        }
                                    </button>
                                }
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private InitialSetupModel setupModel = new();
    private bool isLoading = false;
    private int currentStep = 0;

    private readonly string[] stepTitles = new[]
    {
        "Empresa",
        "Contacto",
        "Configuración",
        "Admin"
    };

    private List<TipoMonedaDto> tiposMoneda = new();
    private List<MetodoValorizacionDto> metodosValorizacion = new();
    private List<string> comunas = new();
    private List<string> regiones = new();

    protected override void OnInitialized()
    {
        LoadData();
        Console.WriteLine("🚀 Componente inicializado");
    }

    private void LoadData()
    {
        Console.WriteLine("📊 Cargando datos...");

        regiones = new List<string>
        {
            "Región Metropolitana", "Valparaíso", "Biobío", "Araucanía",
            "Los Lagos", "Antofagasta", "Coquimbo", "Tarapacá"
        };

        comunas = new List<string>
        {
            "Santiago", "Las Condes", "Providencia", "Ñuñoa", "La Reina",
            "Vitacura", "San Miguel", "Maipú", "Pudahuel"
        };

        tiposMoneda = new List<TipoMonedaDto>
        {
            new() { Id = 1, Nombre = "Peso Chileno ($)" },
            new() { Id = 2, Nombre = "Dólar Estadounidense (US$)" },
            new() { Id = 3, Nombre = "Euro (€)" }
        };

        metodosValorizacion = new List<MetodoValorizacionDto>
        {
            new() { Id = 1, Nombre = "Promedio Ponderado" },
            new() { Id = 2, Nombre = "FIFO" },
            new() { Id = 3, Nombre = "LIFO" },
            new() { Id = 4, Nombre = "Costo Estándar" }
        };

        // Valores por defecto
        setupModel.MonedaPrincipalId = 1;
        setupModel.MetodoValorizacionId = 1;
        setupModel.ManejaLotes = true;
        setupModel.ManejaUbicaciones = true;
        setupModel.AdminUsuario = "admin";

        Console.WriteLine($"✅ Datos cargados. Regiones: {regiones.Count}, Comunas: {comunas.Count}");
    }

    private void DebugTest()
    {
        Console.WriteLine("🧪 TEST CLICK FUNCIONANDO!");
        Console.WriteLine($"Paso actual: {currentStep}");
        Console.WriteLine($"RUT: '{setupModel.RutEmpresa}'");
    }

    private void GoToStep(int step)
    {
        Console.WriteLine($"📍 Navegando al paso: {step}");
        currentStep = step;
        StateHasChanged();
    }

    private void NextStep()
    {
        Console.WriteLine($"➡️ Siguiente paso desde: {currentStep}");
        if (currentStep < stepTitles.Length - 1)
        {
            currentStep++;
            StateHasChanged();
        }
    }

    private void PreviousStep()
    {
        Console.WriteLine($"⬅️ Paso anterior desde: {currentStep}");
        if (currentStep > 0)
        {
            currentStep--;
            StateHasChanged();
        }
    }

    private async Task HandleValidSubmit()
    {
        Console.WriteLine("💾 Iniciando guardado...");
        isLoading = true;
        StateHasChanged();

        try
        {
            await Task.Delay(2000);
            Console.WriteLine("✅ Configuración guardada exitosamente!");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"❌ Error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void ResetForm()
    {
        Console.WriteLine("🔄 REINICIANDO FORMULARIO");
        setupModel = new InitialSetupModel();
        setupModel.MonedaPrincipalId = 1;
        setupModel.MetodoValorizacionId = 1;
        setupModel.ManejaLotes = true;
        setupModel.ManejaUbicaciones = true;
        setupModel.AdminUsuario = "admin";
        currentStep = 0;
        StateHasChanged();
        Console.WriteLine("✅ Formulario reiniciado");
    }

    public class InitialSetupModel
    {
        [Required(ErrorMessage = "RUT es requerido")]
        public string RutEmpresa { get; set; } = "";

        [Required(ErrorMessage = "Razón Social es requerida")]
        public string RazonSocial { get; set; } = "";

        public string? NombreComercial { get; set; }
        public string? Giro { get; set; }
        public string? DireccionCasaMatriz { get; set; }
        public string? RegionCasaMatriz { get; set; }
        public string? CiudadCasaMatriz { get; set; }
        public string? ComunaCasaMatriz { get; set; }
        public string? Telefono { get; set; }

        [Required(ErrorMessage = "Email es requerido")]
        [EmailAddress(ErrorMessage = "Formato de email inválido")]
        public string Email { get; set; } = "";

        public string? SitioWeb { get; set; }
        public string? CodigoSII { get; set; }
        public string? ResolucionSII { get; set; }
        public DateTime? FechaResolucionSII { get; set; }
        public int MonedaPrincipalId { get; set; } = 1;
        public int MetodoValorizacionId { get; set; } = 1;
        public bool PermiteInventarioNegativo { get; set; }
        public bool ManejaLotes { get; set; } = true;
        public bool ManejaSeries { get; set; }
        public bool ManejaUbicaciones { get; set; } = true;

        [Required(ErrorMessage = "Usuario es requerido")]
        public string AdminUsuario { get; set; } = "";

        [Required(ErrorMessage = "Email admin es requerido")]
        [EmailAddress(ErrorMessage = "Formato de email inválido")]
        public string AdminEmail { get; set; } = "";

        [Required(ErrorMessage = "Nombres son requeridos")]
        public string AdminNombres { get; set; } = "";

        [Required(ErrorMessage = "Apellidos son requeridos")]
        public string AdminApellidos { get; set; } = "";

        [Required(ErrorMessage = "Contraseña es requerida")]
        [MinLength(6, ErrorMessage = "Mínimo 6 caracteres")]
        public string AdminPassword { get; set; } = "";

        [Required(ErrorMessage = "Confirmar contraseña")]
        [Compare(nameof(AdminPassword), ErrorMessage = "Las contraseñas no coinciden")]
        public string AdminPasswordConfirm { get; set; } = "";

        public string? AdminRut { get; set; }
    }

    public class TipoMonedaDto
    {
        public int Id { get; set; }
        public string Nombre { get; set; } = "";
    }

    public class MetodoValorizacionDto
    {
        public int Id { get; set; }
        public string Nombre { get; set; } = "";
    }
}